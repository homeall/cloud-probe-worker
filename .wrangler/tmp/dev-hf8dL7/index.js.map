{
  "version": 3,
  "sources": ["../bundle-aFm71V/checked-fetch.js", "../../../src/index.js", "../../../../../../.npm/_npx/32026684e21afda6/node_modules/wrangler/templates/middleware/middleware-ensure-req-body-drained.ts", "../../../../../../.npm/_npx/32026684e21afda6/node_modules/wrangler/templates/middleware/middleware-miniflare3-json-error.ts", "../bundle-aFm71V/middleware-insertion-facade.js", "../../../../../../.npm/_npx/32026684e21afda6/node_modules/wrangler/templates/middleware/common.ts", "../bundle-aFm71V/middleware-loader.entry.ts"],
  "sourceRoot": "/Users/ionut/Documents/Work/cloud-probe-worker/.wrangler/tmp/dev-hf8dL7",
  "sourcesContent": ["const urls = new Set();\n\nfunction checkURL(request, init) {\n\tconst url =\n\t\trequest instanceof URL\n\t\t\t? request\n\t\t\t: new URL(\n\t\t\t\t\t(typeof request === \"string\"\n\t\t\t\t\t\t? new Request(request, init)\n\t\t\t\t\t\t: request\n\t\t\t\t\t).url\n\t\t\t\t);\n\tif (url.port && url.port !== \"443\" && url.protocol === \"https:\") {\n\t\tif (!urls.has(url.toString())) {\n\t\t\turls.add(url.toString());\n\t\t\tconsole.warn(\n\t\t\t\t`WARNING: known issue with \\`fetch()\\` requests to custom HTTPS ports in published Workers:\\n` +\n\t\t\t\t\t` - ${url.toString()} - the custom port will be ignored when the Worker is published using the \\`wrangler deploy\\` command.\\n`\n\t\t\t);\n\t\t}\n\t}\n}\n\nglobalThis.fetch = new Proxy(globalThis.fetch, {\n\tapply(target, thisArg, argArray) {\n\t\tconst [request, init] = argArray;\n\t\tcheckURL(request, init);\n\t\treturn Reflect.apply(target, thisArg, argArray);\n\t},\n});\n", "// cloud-probe-worker/src/index.js\n\nconst VERSION = import.meta.env.VERSION || \"v1.0.0\";\nconst GIT_COMMIT = import.meta.env.GIT_COMMIT || \"abcdef0\";\nconst BUILD_TIME = import.meta.env.BUILD_TIME || \"2024-06-19\";\nconst MAX_SIZE = 100 * 1024 * 1024; // 100MB\n\n/**\n * Add security headers to all responses\n * @param {Headers} headers - The headers object to modify\n * @returns {Headers} The modified headers object\n */\nfunction addSecurityHeaders(headers) {\n  // Force HTTPS for 2 years including subdomains and preload\n  headers.set(\"Strict-Transport-Security\", \"max-age=63072000; includeSubDomains; preload\");\n  // Prevent MIME type sniffing\n  headers.set(\"X-Content-Type-Options\", \"nosniff\");\n  // Prevent clickjacking\n  headers.set(\"X-Frame-Options\", \"DENY\");\n  // Control referrer information\n  headers.set(\"Referrer-Policy\", \"no-referrer\");\n  // Disable XSS filter (modern browsers have better XSS protection)\n  headers.set(\"X-XSS-Protection\", \"0\");\n  // Prevent caching of sensitive data\n  headers.set(\"Cache-Control\", \"no-store, no-cache, must-revalidate, proxy-revalidate\");\n  headers.set(\"Pragma\", \"no-cache\");\n  headers.set(\"Expires\", \"0\");\n  // Additional security headers\n  headers.set(\"Permissions-Policy\", \"camera=(), microphone=(), geolocation=()\");\n  \n  return headers;\n}\n\n/**\n * Create a response with security headers\n * @param {string|object} body - Response body (string or object)\n * @param {object} options - Response options\n * @returns {Response} The response object\n */\nfunction createSecureResponse(body, options = {}) {\n  const { status = 200, headers = new Headers() } = options;\n  \n  // Add security headers\n  addSecurityHeaders(headers);\n  \n  // Handle Uint8Array as binary data\n  if (body instanceof Uint8Array) {\n    return new Response(body, {\n      status,\n      headers\n    });\n  }\n  \n  // Set default content type if not specified\n  if (!headers.has('content-type')) {\n    headers.set('content-type', 'text/plain');\n  }\n  \n  // Stringify if body is an object\n  const responseBody = typeof body === 'object' \n    ? JSON.stringify(body, null, 2) \n    : body;\n    \n  return new Response(responseBody, {\n    status,\n    headers\n  });\n}\n\nconst EXPENSIVE = [\"/speed\", \"/upload\", \"/echo\"];\nconst FREE_LIMITED = [\"/ping\", \"/info\", \"/healthz\", \"/headers\", \"/version\"];\nconst RATE_LIMIT = 30; // requests per minute per IP\n\nfunction getCfInfo(cf) {\n  return {\n    colo: cf?.colo,\n    country: cf?.country,\n    asn: cf?.asn,\n    region: cf?.region,\n    city: cf?.city,\n    latitude: cf?.latitude,\n    longitude: cf?.longitude,\n    timezone: cf?.timezone,\n  };\n}\n\nexport default {\n  async fetch(request, env, ctx) {\n    const url = new URL(request.url);\n    const path = url.pathname;\n    const token = request.headers.get(\"x-api-probe-token\") || \"\";\n    const validToken = env.API_PROBE_TOKEN;\n    const ip = request.headers.get(\"cf-connecting-ip\") || \"unknown\";\n    const headers = new Headers();\n\n    // Echo traceparent header if present\n    const traceparent = request.headers.get(\"traceparent\");\n    if (traceparent) {\n      headers.set(\"traceparent\", traceparent);\n    }\n\n    // --- PROTECTION LOGIC ---\n\n    // Require token for expensive endpoints\n    if (EXPENSIVE.includes(path)) {\n      if (!token || token !== validToken) {\n        return createSecureResponse(\n          { error: \"Unauthorized: missing or invalid token\" },\n          { \n            status: 401,\n            headers: new Headers({ 'content-type': 'application/json' })\n          }\n        );\n      }\n      // proceed with expensive endpoint...\n    }\n\n    // Rate-limit free endpoints per IP (KV-based)\n    if (FREE_LIMITED.includes(path)) {\n      if (env.RATE_LIMIT_KV) {\n        const now = Math.floor(Date.now() / 60000); // current minute\n        const kvKey = `rl:${ip}:${path}:${now}`;\n        \n        // Use atomic increment operation\n        const currentCount = await env.RATE_LIMIT_KV.atomic().increment(kvKey, 1).then(result => result.value);\n        \n        // If this is the first request, set expiration\n        if (currentCount === 1) {\n          ctx.waitUntil(env.RATE_LIMIT_KV.put(kvKey, currentCount.toString(), { expirationTtl: 120 }));\n        }\n        \n        if (currentCount > RATE_LIMIT) {\n          return createSecureResponse(\n            { error: \"Too Many Requests\" },\n            { \n              status: 429,\n              headers: new Headers({ 'content-type': 'application/json' })\n            }\n          );\n        }\n      }\n    }\n\n    // --- ENDPOINT LOGIC ---\n\n    // /ping\n    if (path === \"/ping\" && request.method === \"GET\") {\n      const resp = {\n        timestamp: Date.now(),\n        cf: getCfInfo(request.cf || {}),\n        traceparent: traceparent || null,\n      };\n      return createSecureResponse(resp, { headers: new Headers({ 'content-type': 'application/json' }) });\n    }\n\n    // /speed\n    if (path === \"/speed\" && request.method === \"GET\") {\n      let size = parseInt(url.searchParams.get(\"size\") || \"1048576\", 10); // Default 1MB\n      if (isNaN(size) || size < 0) size = 1048576;\n      if (size > MAX_SIZE) {\n        return createSecureResponse(\n          { error: `Size too large (max ${MAX_SIZE} bytes)` },\n          { \n            status: 413,\n            headers: new Headers({ 'content-type': 'application/json' })\n          }\n        );\n      }\n      let pattern = url.searchParams.get(\"pattern\") || \"zero\";\n      let buf;\n      if (pattern === \"rand\") {\n        buf = crypto.getRandomValues(new Uint8Array(size));\n      } else {\n        buf = new Uint8Array(size); // zeroes by default\n      }\n      return createSecureResponse(buf, { \n        headers: new Headers({\n          'content-type': 'application/octet-stream',\n          'content-length': size.toString()\n        })\n      });\n    }\n\n    // /upload\n    if (path === \"/upload\" && request.method === \"POST\") {\n      let bytes = await request.arrayBuffer();\n      if (bytes.byteLength > MAX_SIZE) {\n        return createSecureResponse(\n          { error: `Upload too large (max ${MAX_SIZE} bytes)` },\n          { \n            status: 413,\n            headers: new Headers({ 'content-type': 'application/json' })\n          }\n        );\n      }\n      const resp = {\n        received: bytes.byteLength,\n        timestamp: Date.now(),\n        traceparent: traceparent || null,\n      };\n      const responseHeaders = new Headers({\n        'content-type': 'application/json',\n        'x-bytes-received': bytes.byteLength.toString()\n      });\n      return createSecureResponse(resp, { headers: responseHeaders });\n    }\n\n    // /info\n    if (path === \"/info\" && request.method === \"GET\") {\n        const cf = request.cf || {};\n        return createSecureResponse(\n          {\n            ip: request.headers.get(\"cf-connecting-ip\") || null,\n            asn: cf.asn || null,\n            city: cf.city || null,\n            region: cf.region || null,\n            country: cf.country || null,\n            latitude: cf.latitude || null,\n            longitude: cf.longitude || null,\n            timezone: cf.timezone || null,\n            colo: cf.colo || null,\n            user_agent: request.headers.get(\"user-agent\") || null,\n            traceparent: traceparent || null,\n          },\n          { headers: new Headers({ 'content-type': 'application/json' }) }\n        );\n    }\n\n    // /headers\n    if (path === \"/headers\" && request.method === \"GET\") {\n      let allHeaders = {};\n      for (let [key, value] of request.headers.entries()) {\n        allHeaders[key] = value;\n      }\n      return createSecureResponse(\n        { headers: allHeaders, traceparent: traceparent || null },\n        { headers: new Headers({ 'content-type': 'application/json' }) }\n      );\n    }\n\n    // /version\n    if (path === \"/version\" && request.method === \"GET\") {\n      return createSecureResponse(\n        {\n          version: VERSION,\n          commit: GIT_COMMIT,\n          build: BUILD_TIME,\n        },\n        { headers: new Headers({ 'content-type': 'application/json' }) }\n      );\n    }\n\n    // /echo\n    if (path === \"/echo\" && request.method === \"POST\") {\n      const reqBody = await request.text();\n      let allHeaders = {};\n      for (let [key, value] of request.headers.entries()) {\n        allHeaders[key] = value;\n      }\n      return createSecureResponse(\n        {\n          echoed: reqBody,\n          headers: allHeaders,\n          traceparent: traceparent || null,\n        },\n        { headers: new Headers({ 'content-type': 'application/json' }) }\n      );\n    }\n\n    // /healthz\n    if (path === \"/healthz\" && request.method === \"GET\") {\n      return createSecureResponse(\n        { status: \"ok\" },\n        { headers: new Headers({ 'content-type': 'application/json' }) }\n      );\n    }\n\n    // Default: ok\n    return createSecureResponse(\"ok\", { \n      headers: new Headers({ 'content-type': 'text/plain' }) \n    });\n  }\n};\n", "import type { Middleware } from \"./common\";\n\nconst drainBody: Middleware = async (request, env, _ctx, middlewareCtx) => {\n\ttry {\n\t\treturn await middlewareCtx.next(request, env);\n\t} finally {\n\t\ttry {\n\t\t\tif (request.body !== null && !request.bodyUsed) {\n\t\t\t\tconst reader = request.body.getReader();\n\t\t\t\twhile (!(await reader.read()).done) {}\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tconsole.error(\"Failed to drain the unused request body.\", e);\n\t\t}\n\t}\n};\n\nexport default drainBody;\n", "import type { Middleware } from \"./common\";\n\ninterface JsonError {\n\tmessage?: string;\n\tname?: string;\n\tstack?: string;\n\tcause?: JsonError;\n}\n\nfunction reduceError(e: any): JsonError {\n\treturn {\n\t\tname: e?.name,\n\t\tmessage: e?.message ?? String(e),\n\t\tstack: e?.stack,\n\t\tcause: e?.cause === undefined ? undefined : reduceError(e.cause),\n\t};\n}\n\n// See comment in `bundle.ts` for details on why this is needed\nconst jsonError: Middleware = async (request, env, _ctx, middlewareCtx) => {\n\ttry {\n\t\treturn await middlewareCtx.next(request, env);\n\t} catch (e: any) {\n\t\tconst error = reduceError(e);\n\t\treturn Response.json(error, {\n\t\t\tstatus: 500,\n\t\t\theaders: { \"MF-Experimental-Error-Stack\": \"true\" },\n\t\t});\n\t}\n};\n\nexport default jsonError;\n", "\t\t\t\timport worker, * as OTHER_EXPORTS from \"/Users/ionut/Documents/Work/cloud-probe-worker/src/index.js\";\n\t\t\t\timport * as __MIDDLEWARE_0__ from \"/Users/ionut/.npm/_npx/32026684e21afda6/node_modules/wrangler/templates/middleware/middleware-ensure-req-body-drained.ts\";\nimport * as __MIDDLEWARE_1__ from \"/Users/ionut/.npm/_npx/32026684e21afda6/node_modules/wrangler/templates/middleware/middleware-miniflare3-json-error.ts\";\n\n\t\t\t\texport * from \"/Users/ionut/Documents/Work/cloud-probe-worker/src/index.js\";\n\t\t\t\tconst MIDDLEWARE_TEST_INJECT = \"__INJECT_FOR_TESTING_WRANGLER_MIDDLEWARE__\";\n\t\t\t\texport const __INTERNAL_WRANGLER_MIDDLEWARE__ = [\n\t\t\t\t\t\n\t\t\t\t\t__MIDDLEWARE_0__.default,__MIDDLEWARE_1__.default\n\t\t\t\t]\n\t\t\t\texport default worker;", "export type Awaitable<T> = T | Promise<T>;\n// TODO: allow dispatching more events?\nexport type Dispatcher = (\n\ttype: \"scheduled\",\n\tinit: { cron?: string }\n) => Awaitable<void>;\n\nexport type IncomingRequest = Request<\n\tunknown,\n\tIncomingRequestCfProperties<unknown>\n>;\n\nexport interface MiddlewareContext {\n\tdispatch: Dispatcher;\n\tnext(request: IncomingRequest, env: any): Awaitable<Response>;\n}\n\nexport type Middleware = (\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tmiddlewareCtx: MiddlewareContext\n) => Awaitable<Response>;\n\nconst __facade_middleware__: Middleware[] = [];\n\n// The register functions allow for the insertion of one or many middleware,\n// We register internal middleware first in the stack, but have no way of controlling\n// the order that addMiddleware is run in service workers so need an internal function.\nexport function __facade_register__(...args: (Middleware | Middleware[])[]) {\n\t__facade_middleware__.push(...args.flat());\n}\nexport function __facade_registerInternal__(\n\t...args: (Middleware | Middleware[])[]\n) {\n\t__facade_middleware__.unshift(...args.flat());\n}\n\nfunction __facade_invokeChain__(\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tdispatch: Dispatcher,\n\tmiddlewareChain: Middleware[]\n): Awaitable<Response> {\n\tconst [head, ...tail] = middlewareChain;\n\tconst middlewareCtx: MiddlewareContext = {\n\t\tdispatch,\n\t\tnext(newRequest, newEnv) {\n\t\t\treturn __facade_invokeChain__(newRequest, newEnv, ctx, dispatch, tail);\n\t\t},\n\t};\n\treturn head(request, env, ctx, middlewareCtx);\n}\n\nexport function __facade_invoke__(\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tdispatch: Dispatcher,\n\tfinalMiddleware: Middleware\n): Awaitable<Response> {\n\treturn __facade_invokeChain__(request, env, ctx, dispatch, [\n\t\t...__facade_middleware__,\n\t\tfinalMiddleware,\n\t]);\n}\n", "// This loads all middlewares exposed on the middleware object and then starts\n// the invocation chain. The big idea is that we can add these to the middleware\n// export dynamically through wrangler, or we can potentially let users directly\n// add them as a sort of \"plugin\" system.\n\nimport ENTRY, { __INTERNAL_WRANGLER_MIDDLEWARE__ } from \"/Users/ionut/Documents/Work/cloud-probe-worker/.wrangler/tmp/bundle-aFm71V/middleware-insertion-facade.js\";\nimport { __facade_invoke__, __facade_register__, Dispatcher } from \"/Users/ionut/.npm/_npx/32026684e21afda6/node_modules/wrangler/templates/middleware/common.ts\";\nimport type { WorkerEntrypointConstructor } from \"/Users/ionut/Documents/Work/cloud-probe-worker/.wrangler/tmp/bundle-aFm71V/middleware-insertion-facade.js\";\n\n// Preserve all the exports from the worker\nexport * from \"/Users/ionut/Documents/Work/cloud-probe-worker/.wrangler/tmp/bundle-aFm71V/middleware-insertion-facade.js\";\n\nclass __Facade_ScheduledController__ implements ScheduledController {\n\treadonly #noRetry: ScheduledController[\"noRetry\"];\n\n\tconstructor(\n\t\treadonly scheduledTime: number,\n\t\treadonly cron: string,\n\t\tnoRetry: ScheduledController[\"noRetry\"]\n\t) {\n\t\tthis.#noRetry = noRetry;\n\t}\n\n\tnoRetry() {\n\t\tif (!(this instanceof __Facade_ScheduledController__)) {\n\t\t\tthrow new TypeError(\"Illegal invocation\");\n\t\t}\n\t\t// Need to call native method immediately in case uncaught error thrown\n\t\tthis.#noRetry();\n\t}\n}\n\nfunction wrapExportedHandler(worker: ExportedHandler): ExportedHandler {\n\t// If we don't have any middleware defined, just return the handler as is\n\tif (\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__ === undefined ||\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__.length === 0\n\t) {\n\t\treturn worker;\n\t}\n\t// Otherwise, register all middleware once\n\tfor (const middleware of __INTERNAL_WRANGLER_MIDDLEWARE__) {\n\t\t__facade_register__(middleware);\n\t}\n\n\tconst fetchDispatcher: ExportedHandlerFetchHandler = function (\n\t\trequest,\n\t\tenv,\n\t\tctx\n\t) {\n\t\tif (worker.fetch === undefined) {\n\t\t\tthrow new Error(\"Handler does not export a fetch() function.\");\n\t\t}\n\t\treturn worker.fetch(request, env, ctx);\n\t};\n\n\treturn {\n\t\t...worker,\n\t\tfetch(request, env, ctx) {\n\t\t\tconst dispatcher: Dispatcher = function (type, init) {\n\t\t\t\tif (type === \"scheduled\" && worker.scheduled !== undefined) {\n\t\t\t\t\tconst controller = new __Facade_ScheduledController__(\n\t\t\t\t\t\tDate.now(),\n\t\t\t\t\t\tinit.cron ?? \"\",\n\t\t\t\t\t\t() => {}\n\t\t\t\t\t);\n\t\t\t\t\treturn worker.scheduled(controller, env, ctx);\n\t\t\t\t}\n\t\t\t};\n\t\t\treturn __facade_invoke__(request, env, ctx, dispatcher, fetchDispatcher);\n\t\t},\n\t};\n}\n\nfunction wrapWorkerEntrypoint(\n\tklass: WorkerEntrypointConstructor\n): WorkerEntrypointConstructor {\n\t// If we don't have any middleware defined, just return the handler as is\n\tif (\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__ === undefined ||\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__.length === 0\n\t) {\n\t\treturn klass;\n\t}\n\t// Otherwise, register all middleware once\n\tfor (const middleware of __INTERNAL_WRANGLER_MIDDLEWARE__) {\n\t\t__facade_register__(middleware);\n\t}\n\n\t// `extend`ing `klass` here so other RPC methods remain callable\n\treturn class extends klass {\n\t\t#fetchDispatcher: ExportedHandlerFetchHandler<Record<string, unknown>> = (\n\t\t\trequest,\n\t\t\tenv,\n\t\t\tctx\n\t\t) => {\n\t\t\tthis.env = env;\n\t\t\tthis.ctx = ctx;\n\t\t\tif (super.fetch === undefined) {\n\t\t\t\tthrow new Error(\"Entrypoint class does not define a fetch() function.\");\n\t\t\t}\n\t\t\treturn super.fetch(request);\n\t\t};\n\n\t\t#dispatcher: Dispatcher = (type, init) => {\n\t\t\tif (type === \"scheduled\" && super.scheduled !== undefined) {\n\t\t\t\tconst controller = new __Facade_ScheduledController__(\n\t\t\t\t\tDate.now(),\n\t\t\t\t\tinit.cron ?? \"\",\n\t\t\t\t\t() => {}\n\t\t\t\t);\n\t\t\t\treturn super.scheduled(controller);\n\t\t\t}\n\t\t};\n\n\t\tfetch(request: Request<unknown, IncomingRequestCfProperties>) {\n\t\t\treturn __facade_invoke__(\n\t\t\t\trequest,\n\t\t\t\tthis.env,\n\t\t\t\tthis.ctx,\n\t\t\t\tthis.#dispatcher,\n\t\t\t\tthis.#fetchDispatcher\n\t\t\t);\n\t\t}\n\t};\n}\n\nlet WRAPPED_ENTRY: ExportedHandler | WorkerEntrypointConstructor | undefined;\nif (typeof ENTRY === \"object\") {\n\tWRAPPED_ENTRY = wrapExportedHandler(ENTRY);\n} else if (typeof ENTRY === \"function\") {\n\tWRAPPED_ENTRY = wrapWorkerEntrypoint(ENTRY);\n}\nexport default WRAPPED_ENTRY;\n"],
  "mappings": "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",
  "names": []
}
